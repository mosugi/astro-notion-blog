---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props

const id = buildHeadingId(block.Heading1)
---

{
  block.Heading1.IsToggleable ? (
      <details class="toggle">
      <summary>
        <h3>
          <a class="not-prose" href={`#${id}`} id={id}>
          {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
            <RichText richText={richText} />
          ))}
          </a>
        </h3>
      </summary>
      <div>
        {block.Heading1.Children && (
          <NotionBlocks blocks={block.Heading1.Children} headings={headings} />
        )}
      </div>
    </details>
  ) : (
      <h3>
        <a class="not-prose" href={`#${id}`} id={id}>
        {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
        </a>
      </h3>
  )
}

<style>
  .toggle {
    margin: 2rem 0 0;
  }
  @media (max-width: 640px) {
    .toggle {
      margin: 1.4rem 0 0;
    }
  }

  .toggle > summary {
    cursor: pointer;
  }

  .toggle > summary > h3 {
    display: inline;
  }

  .toggle > summary > h3 > a {
    display: inline;
  }

  .toggle > div {
    margin-left: 1em;
  }
</style>
